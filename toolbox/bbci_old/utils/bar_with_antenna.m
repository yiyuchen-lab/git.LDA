function [H, xx, xw]= bar_with_antenna(y, y_sem, varargin)
%BAR_WITH_ANTENNA - Bar plot with antennas, e.g., to show the SEM.
%
%Synopsis:
%   [H, X]= bar_with_antenna(Y, Y_SEM, <OPT>)
%
%Arguments:
%   Y:     DOUBLE [MxN] - Heights of the bars
%   Y_SEM: DOUBLE [MxN] - Length of the antenna
%   OPT: PROPLIST - Structure or property/value list of optional properties:
%     'clf' - BOOL (default 1): Clear figure before plotting
%     'colOrder' - DOUBLE [Nx3]: Colormap of N colors, default blue to white
%         (generated by cmap_bluewhite(N, 'min_val',0.15).
%     'antenna_type' - CHAR (default 'o'): Specifies how anntennas are drawn, 
%         options are 'o','oo','T','I'.
%     'antenna_color' - DOUBLE [Nx3] or 'auto' (default): Color of antennas, with
%         'auto' meaning same colors as bars.
%     'antenna_spec' - PROPLIST: Line specifications for antennas
%Returns:
%   H: handles to graphic objects
%   X: horizonal position of the middle of the bars
%
%Description:
%   This function makes a bar plot in which a (symmetric) interval around
%   each value is visualized by antennas. The typically application is
%   that the values itself are the means of some observed variable and
%   the intervals around each mean are given as the standard deviation
%   (STD) or the standard error of the mean (SEM).
%
%Examples:
%   Y= diag([5 6 2])*rand(3,6)+1;
%   Y_SEM= rand(3,6)+0.2;
%   H= bar_with_antenna(Y, Y_SEM);
%   set(gca, 'XTickLabel','Group 1|Group 2|Group 3');
%   legend(H.bar, cprintf('bar %d',1:6));
%
%   [H, xx]= bar_with_antenna(Y(1,:), Y_SEM(1,:), 'colOrder',cmap_rainbow(6), 'antenna_color',[0 0 0]);
%   set(gca, 'XTick',xx, 'XTickLabel',1:6);
%
%   H= bar_with_antenna(Y, Y_SEM, 'antenna_type','oo');
%
%   H= bar_with_antenna(Y(1,:), Y_SEM(1,:), 'antenna_type','I', 'antenna_color','auto', 'draw_marker',1);
%   delete(H.bar);

% Benjamin Blankertz


[nGroups, nCol]= size(y);
cmap_default= cmap_bluewhite(nCol, 'min_val',0.15);
opt= propertylist2struct(varargin{:});
[opt, isdefault]= ...
    set_defaults(opt, ...
                 'clf', 1, ...
                 'colOrder', cmap_default, ...
                 'antenna_type', 'o', ...
                 'antenna_color', 'auto', ...
                 'antenna_width', 0.5, ...
                 'antenna_spec', {}, ...
                 'draw_marker', 0, ...
                 'marker_spec', {});

if nargin<2 || isempty(y_sem),
  opt.antenna_type= 'none';
end

if ismember(opt.antenna_type, {'oo','TT','I'}),
  [opt, isdefault]= opt_overrideIfDefault(opt, isdefault, ...
                                          'antenna_color',0.5*[1 1 1]);
end
if isequal(opt.antenna_color, 'auto'),
  opt.antenna_color= opt.colOrder;
end

if opt.clf,
  clf;
end

if nGroups==1,  %% work-around for case nGroups=1
  H.bar= bar([y; y]);
else
  H.bar= bar(y);
end


hold on;
for c= 1:nCol,
 set(H.bar(c), 'FaceColor',opt.colOrder(c,:));
 xdata= get(get(H.bar(c),'Children'),'XData');
 xw= xdata(3,1)-xdata(1,1);
 xtmp= mean(xdata);
 if nGroups==1,  %% work-around for case nGroups=1
   xtmp= xtmp(1);
 end
 xx(c,:)= xtmp;
 xtw= xw*opt.antenna_width/2;
 switch(opt.antenna_type),
  case 'o',
   h1= line([xx(c,:); xx(c,:)], ...
            [y(:,c), y(:,c)+y_sem(:,c)]');
   h2= line([xx(c,:); xx(c,:)], ...
            [y(:,c)+y_sem(:,c), y(:,c)+y_sem(:,c)]');
   H.antenna(:,c)= [h1; h2];
  case 'T',
   h1= line([xx(c,:); xx(c,:)], ...
            [y(:,c), y(:,c)+y_sem(:,c)]');
   h2= line([xx(c,:)-xtw; xx(c,:)+xtw], ...
            [y(:,c)+y_sem(:,c), y(:,c)+y_sem(:,c)]');
   H.antenna(:,c)= [h1; h2];
  case 'oo',
   H.antenna(:,c)= line([xx(c,:); xx(c,:)], ...
                        [y(:,c)-y_sem(:,c), y(:,c)+y_sem(:,c)]');
  case {'I','TT'},
   h1= line([xx(c,:); xx(c,:)], ...
            [y(:,c)-y_sem(:,c), y(:,c)+y_sem(:,c)]');
   h2= line([xx(c,:)-xtw; xx(c,:)+xtw], ...
            [y(:,c)+y_sem(:,c), y(:,c)+y_sem(:,c)]');
   h3= line([xx(c,:)-xtw; xx(c,:)+xtw], ...
            [y(:,c)-y_sem(:,c), y(:,c)-y_sem(:,c)]');
   H.antenna(:,c)= [h1; h2; h3];
  case 'none',
   H.antenna(:,c)= NaN;
  otherwise,
   error('unknown antenna.type');
 end
 if ~any(isnan(H.antenna(:,c))),
   ci= 1+mod(c-1, size(opt.antenna_color,1));
   set(H.antenna(:,c), 'Color',opt.antenna_color(ci,:));
 end
end

switch(opt.antenna_type),
 case 'o',
  ii= nGroups+[1:nGroups];
  set(H.antenna(ii,:), 'Marker','o', 'MarkerSize',8, 'MarkerFaceColor','w');
 case 'oo',
  set(H.antenna, 'Marker','o', 'MarkerSize',8, 'MarkerFaceColor','w');
end
if ~any(isnan(H.antenna(:,c))),
  set(H.antenna, 'LineWidth',4, opt.antenna_spec{:});
end
set(gca, 'YGrid','on', 'TickLength',[0 0]);

if opt.draw_marker,
  for c= 1:nCol,
    H.marker(:,c)= plot(xx(c,:)', y(:,c), 'd');
    ci= 1+mod(c-1, size(opt.antenna_color,1));
    set(H.marker(:,c), 'Color',opt.antenna_color(ci,:));
  end
  set(H.marker, 'MarkerSize',12, 'LineWidth',4, 'MarkerFaceColor','w', ...
                opt.antenna_spec{:}, opt.marker_spec{:});
end

% Adjust XLim such that there is one bar-width space at the borders,
set(gca, 'XLim',reshape(xx([1 end]),[1 2])+[-1 1]*xw*1.5);
hold off;
